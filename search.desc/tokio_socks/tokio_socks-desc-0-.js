searchState.loadedDescShard("tokio_socks", 0, "Address type not supported\nCommand not supported\nConnection not allowed by ruleset\nConnection refused\nConnect to a fully-qualified domain name.\nContains the error value\nError type of <code>tokio-socks</code>\nGeneral SOCKS server failure\nHost unreachable\nA trait for objects that can be converted to <code>TargetAddr</code>.\nInvalid authentication values. It contains the detailed …\nInvalid reserved byte\nProxy server returns an invalid version number.\nFailure due to invalid target address. It contains the …\nFailure caused by an IO error.\nConnect to an IP address.\nNetwork unreachable\nNo acceptable auth methods\nContains the success value\nFailure when parsing a <code>String</code>.\nPassword auth failure\nProxy server unreachable.\nA SOCKS connection target.\nA trait for objects which can be converted or resolved to …\nTTL expired\nUnknown address type\nUnknown auth method\nUnknown error\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the value of self to a <code>TargetAddr</code>.\nCreates owned <code>TargetAddr</code> by cloning. It is usually used to …\nA SOCKS5 BIND client.\nA SOCKS5 client.\nA <code>Future</code> which resolves to a socket to the target server …\nConsumes this listener, returning a <code>Future</code> which resolves …\nInitiates a BIND request to the specified proxy.\nReturns the address of the proxy-side TCP listener.\nInitiates a BIND request to the specified proxy using …\nInitiates a BIND request to the specified proxy using …\nInitiates a BIND request to the specified proxy using the …\nConnects to a target server through a SOCKS5 proxy given …\nConnects to a target server through a SOCKS5 proxy using …\nConnects to a target server through a SOCKS5 proxy using …\nConnects to a target server through a SOCKS5 proxy given a …\nConnect to the proxy server, authenticate and issue the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>Socks5Stream</code>, returning the inner socket.\nReturns the target address that the proxy server connects …")